{"version":3,"sources":["../client/app.jsx"],"names":["Card","props","value","React","Component","Board","words","map","row","indexRow","card","indexCol","InfoBoard","isBluesTurn","Game","state","colors","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;IACMA,I;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA,UAAI,WAAU,MAAd;AAAsB,aAAKC,KAAL,CAAWC;AAAjC,OADF;AAGD;;;;EALgBC,MAAMC,S;;IAQnBC,K;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA,UAAO,WAAU,OAAjB;AACE;AAAA;AAAA;AACG,eAAKJ,KAAL,CAAWK,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACvC,mBACE;AAAA;AAAA,gBAAI,KAAKA,QAAT;AACGD,kBAAID,GAAJ,CAAQ,UAACG,IAAD,EAAOC,QAAP;AAAA,uBAAoB,oBAAC,IAAD,IAAM,OAAOD,IAAb,EAAmB,KAAKD,WAAW,CAAX,GAAeE,QAAvC,GAApB;AAAA,eAAR;AADH,aADF;AAKD,WANA;AADH;AADF,OADF;AAaD;;;;EAfiBR,MAAMC,S;;IAkBpBQ,S;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE;AAAA;AAAA,YAAK,WAAU,QAAf;AAAA;AAA8B,eAAKX,KAAL,CAAWY,WAAX,GAAyB,MAAzB,GAAkC,KAAhE;AAAA;AAAA,SADF;AAEE;AAAA;AAAA,YAAQ,WAAU,cAAlB;AAAA;AAAA;AAFF,OADF;AAMD;;;;EARqBV,MAAMC,S;;IAWxBU,I;;;AACJ,gBAAYb,KAAZ,EAAmB;AAAA;;AAAA,6GACXA,KADW;;AAEjB,WAAKc,KAAL,GAAa;AACXF,mBAAa,IADF;AAEXP,aAAO,CACL,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,OAA1B,EAAmC,MAAnC,CADK,EAEL,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,KAA3B,EAAkC,KAAlC,CAFK,EAGL,CAAC,OAAD,EAAU,WAAV,EAAuB,MAAvB,EAA+B,QAA/B,EAAyC,KAAzC,CAHK,EAIL,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,EAA8B,KAA9B,EAAqC,QAArC,CAJK,EAKL,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,YAA9B,EAA4C,KAA5C,CALK,CAFI;AASXU,cAAQ,CACN,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,EAAwB,QAAxB,EAAkC,QAAlC,CADM,EAEN,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,EAAyB,KAAzB,EAAgC,MAAhC,CAFM,EAGN,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,QAAjC,CAHM,EAIN,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,EAAwB,MAAxB,EAAgC,QAAhC,CAJM,EAKN,CAAC,QAAD,EAAW,QAAX,EAAqB,KAArB,EAA4B,MAA5B,EAAoC,KAApC,CALM;AATG,KAAb;AAFiB;AAmBlB;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AADF,SADF;AAIE,4BAAC,KAAD,IAAO,OAAO,KAAKD,KAAL,CAAWT,KAAzB,GAJF;AAKE,4BAAC,SAAD,IAAW,aAAa,KAAKS,KAAL,CAAWF,WAAnC;AALF,OADF;AASD;;;;EAhCgBV,MAAMC,S;;AAoCzBa,SAASC,MAAT,CAAgB,oBAAC,IAAD,OAAhB,EAA0BC,SAASC,cAAT,CAAwB,KAAxB,CAA1B","file":"app.js","sourcesContent":["\nclass Card extends React.Component {\n  render() {\n    return (\n      <td className=\"card\">{this.props.value}</td>\n    )\n  }\n}\n\nclass Board extends React.Component {\n  render() {\n    return (\n      <table className=\"board\">\n        <tbody>\n          {this.props.words.map((row, indexRow) => {\n            return (\n              <tr key={indexRow}>\n                {row.map((card, indexCol) => <Card value={card} key={indexRow * 6 + indexCol} />)}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nclass InfoBoard extends React.Component {\n  render() {\n    return (\n      <div className=\"infoboard\">\n        <div className=\"player\">Team {this.props.isBluesTurn ? 'Blue' : 'Red'}'s turn</div>\n        <button className=\"revealbutton\">Reveal</button>\n      </div>\n    )\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBluesTurn: true,\n      words: [\n        ['ball', 'fish', 'track', 'maple', 'pole'],\n        ['sink', 'apple', 'spell', 'kid', 'cab'],\n        ['lemon', 'scientist', 'whip', 'coffee', 'cat'],\n        ['leaf', 'dance', 'princess', 'net', 'Europe'],\n        ['water', 'yellow', 'bridge', 'watermelon', 'tea']\n      ],\n      colors: [\n        ['blue', 'blue', 'red', 'yellow', 'yellow'],\n        ['red', 'black', 'blue', 'red', 'blue'],\n        ['red', 'blue', 'red', 'yellow', 'yellow'],\n        ['blue', 'blue', 'red', 'blue', 'yellow'],\n        ['yellow', 'yellow', 'red', 'blue', 'red']\n      ]\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h1>Codenames</h1>\n        </div>\n        <Board words={this.state.words} />\n        <InfoBoard isBluesTurn={this.state.isBluesTurn} />\n      </div>\n    )\n  }\n}\n\n\nReactDOM.render(<Game />, document.getElementById('app'));"]}